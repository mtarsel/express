name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
      - "4.x"
      - "5.x"
      - "5.0"
    paths-ignore:
      - "*.md"
  pull_request:
    paths-ignore:
      - "*.md"

jobs:
  lint:
    name: Lint - ${{ matrix.os }} (${{ matrix.architecture }}) [${{ matrix.runner-owner }}]
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      NODE_OS: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            architecture: x64
            runner-owner: "github-hosted"
          - os: ubuntu-22.04-lxd-selfhosted
            architecture: ppc64le
            runner-owner: "actions-runner-ppc64le"
          - os: ubuntu-22.04-ppc64le
            architecture: ppc64le
            runner-owner: "actions-runner-ppc64le"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          architecture: ${{ matrix.architecture }}

      - name: Configure npm loglevel
        run: npm config set loglevel verbose

      - name: Install dependencies with verbose logging
        run: npm install --ignore-scripts --only=dev --loglevel=verbose

      - name: Output Environment Variables
        run: |
          echo "Node OS: $NODE_OS"
          echo "Node.js version: $(node -v)"
          echo "NPM version: $(npm -v)"

      - name: Run lint
        run: npm run lint

  test:
    name: Test - Node.js ${{ matrix.node-version }} on ${{ matrix.os }} (${{ matrix.architecture }}) [${{ matrix.runner-owner }}]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            architecture: x64
            node-version: 20
            runner-owner: "github-hosted"
          - os: ubuntu-22.04
            architecture: x64
            node-version: 21
            runner-owner: "github-hosted"
          - os: ubuntu-22.04-lxd-selfhosted
            architecture: ppc64le
            node-version: 20
            runner-owner: "actions-runner-x64"
          - os: ubuntu-22.04-lxd-selfhosted
            architecture: ppc64le
            node-version: 21
            runner-owner: "actions-runner-x64"
          - os: ubuntu-22.04-ppc64le
            architecture: ppc64le
            node-version: 20
            runner-owner: "actions-runner-ppc64le"
          - os: ubuntu-22.04-ppc64le
            architecture: ppc64le
            node-version: 21
            runner-owner: "actions-runner-ppc64le"

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      NODE_OS: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          architecture: ${{ matrix.architecture }}

      - name: Configure npm loglevel
        run: npm config set loglevel verbose

      - name: Install dependencies with verbose logging
        run: npm install --loglevel=verbose

      - name: Output Environment Variables
        run: |
          echo "Node OS: $NODE_OS"
          echo "Node.js version: $(node -v)"
          echo "NPM version: $(npm -v)"

      - name: Run tests
        shell: bash
        run: |
          npm run test-ci
          cp coverage/lcov.info "coverage/${{ matrix.node-version }}-${{ matrix.runner-owner }}-${{ github.sha }}.lcov"

      - name: Collect code coverage
        run: |
          mv ./coverage "./${{ matrix.node-version }}-${{ matrix.runner-owner }}"
          mkdir -p ./coverage
          mv "./${{ matrix.node-version }}-${{ matrix.runner-owner }}" "./coverage/${{ matrix.node-version }}-${{ matrix.runner-owner }}"

      - name: Upload code coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}-${{ matrix.runner-owner }}-${{ github.sha }}
          path: ./coverage
          retention-days: 1

  coverage:
    name: Merge Coverage Reports
    needs: test
    runs-on: ubuntu-latest
    env:
      NODE_OS: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure npm loglevel
        run: npm config set loglevel verbose

      - name: Install lcov
        shell: bash
        run: sudo apt-get -y install lcov

      - name: Collect coverage reports
        uses: actions/download-artifact@v4
        with:
          name: coverage-${{ needs.test.outputs.matrix.runner-owner }}-${{ needs.test.outputs.matrix.node-version }}-${{ github.sha }}
          path: ./coverage

      - name: Merge coverage reports
        shell: bash
        run: |
          find ./coverage -name "*.lcov" -exec printf '-a %q\n' {} \; | xargs lcov -o ./coverage/lcov.info

      - name: Upload coverage report
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Output Environment Variables
        run: |
          echo "Node OS: $NODE_OS"
